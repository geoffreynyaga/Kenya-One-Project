# Generated by Django 3.0.2 on 2020-04-08 21:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_aircraft'),
    ]

    operations = [
        migrations.CreateModel(
            name='Detailed_Weights',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wing', models.FloatField()),
                ('wing_dist_from_nose', models.FloatField()),
                ('main_gear', models.FloatField()),
                ('main_gear_dist_from_nose', models.FloatField()),
                ('nose_gear', models.FloatField()),
                ('nose_gear_dist_from_nose', models.FloatField()),
                ('horizontal_tail', models.FloatField()),
                ('horizontal_tail_dist_from_nose', models.FloatField()),
                ('vertical_tail', models.FloatField()),
                ('vertical_tail_dist_from_nose', models.FloatField()),
                ('fuselage', models.FloatField()),
                ('fuselage_dist_from_nose', models.FloatField()),
                ('installed_engine', models.FloatField()),
                ('installed_engine_dist_from_nose', models.FloatField()),
                ('fuel_system', models.FloatField()),
                ('fuel_system_dist_from_nose', models.FloatField()),
                ('flight_control', models.FloatField()),
                ('flight_control_dist_from_nose', models.FloatField()),
                ('hydraulic_system', models.FloatField()),
                ('hydraulic_system_dist_from_nose', models.FloatField()),
                ('avionic_system', models.FloatField()),
                ('avionic_system_dist_from_nose', models.FloatField()),
                ('electrical_system', models.FloatField()),
                ('electrical_system_dist_from_nose', models.FloatField()),
                ('furnishings', models.FloatField()),
                ('furnishings_dist_from_nose', models.FloatField()),
                ('S_fuselage', models.FloatField()),
                ('fuselage_length', models.FloatField()),
                ('cabin_pressure_differential', models.IntegerField(default=0)),
                ('pressurized_cabin_volume', models.FloatField()),
                ('fuselage_structure_depth', models.FloatField()),
                ('fuselage_max_width', models.FloatField()),
                ('fuselage_max_depth', models.FloatField()),
                ('main_gear_struct_length', models.FloatField()),
                ('nose_gear_struct_length', models.FloatField()),
                ('fuel_tanks_number', models.IntegerField()),
                ('LE_distance', models.FloatField()),
                ('Wiae', models.FloatField()),
                ('integral_tanks_number', models.IntegerField(default=0)),
                ('integral_tanks_fuel', models.IntegerField(default=0)),
                ('integral_tanks_total_fuel', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Detailed_Weights',
                'verbose_name_plural': 'Detailed_Weights',
            },
        ),
        migrations.CreateModel(
            name='Performance_Constraints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ground_run', models.IntegerField()),
                ('oswalds_efficiency', models.FloatField()),
                ('k', models.FloatField()),
                ('ρalt', models.FloatField()),
                ('altitude', models.IntegerField()),
                ('rho_alt', models.FloatField()),
                ('rho_sigma', models.IntegerField()),
                ('turn_load_factor', models.FloatField()),
                ('Vv', models.IntegerField()),
                ('V_climb', models.FloatField()),
                ('vc', models.FloatField()),
                ('service_ceiling', models.IntegerField()),
                ('rho_service_ceiling', models.FloatField()),
                ('ηp_alt', models.FloatField()),
                ('rho_sigma_sc', models.FloatField()),
                ('S', models.FloatField()),
            ],
            options={
                'verbose_name': 'Performance_Constraints',
                'verbose_name_plural': 'Performance_Constraintss',
            },
        ),
        migrations.CreateModel(
            name='Sref_and_Power_Sizing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cl_max', models.FloatField()),
                ('v_stall', models.FloatField()),
                ('v_max', models.FloatField()),
                ('cdo', models.FloatField()),
                ('aspect_ratio', models.FloatField()),
                ('S_to', models.IntegerField()),
                ('CL_to', models.FloatField()),
                ('CDOHLD_TO', models.FloatField(default=0.005)),
                ('CDoTO', models.FloatField()),
                ('CDTO', models.FloatField()),
                ('CLR', models.FloatField()),
                ('prop_efficiency_to', models.FloatField()),
                ('CDG', models.FloatField()),
                ('runway_friction_coefficient', models.FloatField(default=0.04)),
                ('rate_of_climb', models.IntegerField()),
                ('prop_efficiency_climb', models.FloatField()),
                ('ceiling', models.IntegerField()),
                ('rate_of_climb_ceiling', models.FloatField()),
                ('power_loading', models.FloatField()),
                ('wing_loading', models.FloatField()),
                ('Sref', models.FloatField()),
                ('power_required', models.FloatField()),
                ('number_of_engines', models.IntegerField(default=1)),
                ('power_per_engine', models.FloatField()),
                ('engine_weight', models.FloatField()),
                ('engine_power', models.FloatField()),
            ],
            options={
                'verbose_name': 'Sref_and_Power_Sizing',
                'verbose_name_plural': 'Sref_and_Power_Sizings',
            },
        ),
        migrations.CreateModel(
            name='MTOW_Sizing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pax', models.IntegerField(blank=True, null=True)),
                ('pax_weight', models.IntegerField(blank=True, null=True)),
                ('crew_number', models.IntegerField(blank=True, null=True)),
                ('crew_single_weight', models.IntegerField(blank=True, null=True)),
                ('luggage_weight_per_pax', models.FloatField(blank=True, null=True)),
                ('total_payload_weight', models.FloatField()),
                ('total_crew_weight', models.IntegerField()),
                ('total_empty_weight', models.IntegerField()),
                ('total_fuel_weight', models.IntegerField()),
                ('empty_weight_constant_1', models.FloatField()),
                ('empty_weight_constant_2', models.FloatField()),
                ('propeller_efficiency', models.FloatField()),
                ('cbhp', models.FloatField()),
                ('ld_max', models.FloatField()),
                ('range', models.IntegerField()),
                ('endurance', models.FloatField(blank=True, null=True)),
                ('mtow', models.FloatField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('aircraft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Aircraft')),
            ],
            options={
                'verbose_name': 'MTOW_SIZING',
                'verbose_name_plural': 'MTOW_SIZINGs',
            },
        ),
        migrations.CreateModel(
            name='Fuel_Fractions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w1', models.FloatField()),
                ('w2', models.FloatField()),
                ('w3', models.FloatField()),
                ('w4', models.FloatField()),
                ('w5', models.FloatField()),
                ('w6', models.FloatField()),
                ('aircraft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Aircraft')),
            ],
            options={
                'verbose_name': 'Fuel_Fractions',
                'verbose_name_plural': 'Fuel_Fractionss',
            },
        ),
    ]
